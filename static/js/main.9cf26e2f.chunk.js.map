{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/Auth/Auth.css","containers/QuizCreator/QuizCreator.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/Auth/Auth.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","style","textAlign","paddingBottom","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","Auth","color","QuizCreator","QuizList","renderQuizes","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cf26e2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--1vtC6\",\"close\":\"Drawer__close--1DPHJ\",\"active\":\"Drawer__active--3Ewwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--2trbj\",\"open\":\"MenuToggle__open--UVJ1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--guFF3\",\"QuizWrapper\":\"Quiz__QuizWrapper--3Hy2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--lxUZJ\",\"Question\":\"ActiveQuiz__Question--Flw_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--3SNQ0\",\"succes\":\"AnswerItem__succes--bjj8q\",\"error\":\"AnswerItem__error--1EAN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2wZlN\",\"succes\":\"FinishedQuiz__succes--MQa8P\",\"error\":\"FinishedQuiz__error--3yLIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--3bi60\",\"error\":\"Button__error--1gfMk\",\"succes\":\"Button__succes--2MrVv\",\"primary\":\"Button__primary--3iRH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2wiTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--1m7c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1RCrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2N4mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--2r9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--kvD_d\"};","import React from 'react'\nimport classes from './MenuToggle.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n    if(props.isOpen){\n        cls.push('fa-times')\n        cls.push(classes.open)\n    }else {\n        cls.push('fa-bars')\n    }\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.css'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, {Component} from 'react'\nimport classes from './Drawer.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from \"react-router-dom\";\n\nconst links = [\n    {to: '/', label: 'Список тестов', exact: true},\n    {to: '/auth', label: 'Авторизация', exact: true},\n    {to: '/quiz-creator', label: 'Создать тест', exact: true}\n]\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    }\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n    render() {\n        const cls = [classes.Drawer]\n        if(!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n        return (\n            <React.Fragment>\n            <nav className={cls.join(' ')}>\n                <ul>\n                    {this.renderLinks()}\n                </ul>\n            </nav>\n                {this.props.isOpen ? <Backdrop\n                onClick={this.props.onClose}/> : null}\n            </React.Fragment>\n        )\n    }\n}\nexport default Drawer\n","import React, { Component } from \"react\";\nimport classes from \"./Layout.css\";\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  }\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    });\n  }\n\n  menuCloseHandler = () => {\n      this.setState({\n          menu: false\n      });\n  }\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n            isOpen={this.state.menu}\n            onClose={this.menuCloseHandler}\n        />\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n        <main>{this.props.children}</main>\n          <div style={{textAlign: 'center', paddingBottom: '15px'}}>Created by Eugene Zolotarev</div>\n      </div>\n    );\n  }\n}\nexport default Layout;\n","import React from 'react'\nimport classes from './AnswerItem.css'\n\nconst AnswerItem = props => {\nconst cls = [classes.AnswerItem]\n    if(props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li className={cls.join(' ')}\n            //По клику вызываем функцию которая вызываевает переданную по иерархии\n            // функцию проверки на правильность клика в которая принимает id конкретного элемента массива\n        onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n            {/*Отображаем ответ answer который берется из итерируемого массива\n            в компоненте AnswerList*/}\n            {props.answer.text}\n        </li>\n    )\n}\n\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                //Задаем props для Item который вкладывает в себя в файле\n                //AnswerItem как содержимое выводимое в html\n                //Где answer итерируемый элемент массива и необходимый для React key по индексу элемента массива\n                <AnswerItem\n                answer={answer}\n                key={index}\n                onAnswerClick={props.onAnswerClick}\n                state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })}\n    </ul>\n)\n\nexport default AnswersList","import React from 'react';\nimport classes from './ActiveQuiz.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n     <span>\n         <strong>{props.answerNumber}.\n         &nbsp;{props.question}\n         </strong>\n     </span>\n\n            <small>{props.answerNumber} из {props.quizLength}</small>\n        </p>\n       <AnswersList\n       // Забираем параметр из вызова компонента в файле Quiz\n       // в котором как параметр задается ссылка на массив ответов\n       answers={props.answers}\n       onAnswerClick={props.onAnswerClick}\n       state={props.state}\n       />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\nimport classes from './Button.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n    return (\n        <button\n            className={cls.join(' ')}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.css'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'succes') {\n            total++\n        }\n        return total\n    }, 0)\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Повторить</Button>\n                <Link to={'/'}><Button type='succes'>К списку тестов</Button></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import React, {Component} from 'react'\nimport classes from './Quiz.css'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component {\n    state = {\n        results: {}, // {[id]: success error\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null, // {[id]: success error\n        quiz: [\n            {\n                question: 'Что у меня в карманах?',\n                rightAnswerId: 4,\n                id: 1,\n                answers: [\n                    {text: 'Ничего', id: 1},\n                    {text: 'Веревка', id: 2},\n                    {text: 'Руки', id: 3},\n                    {text: 'Кольцо', id: 4},\n                ]\n            },\n            {\n                question: 'Какого цвета крестный Гарри?',\n                rightAnswerId: 2,\n                id: 2,\n                answers: [\n                    {text: 'Белый', id: 1},\n                    {text: 'Черный', id: 2},\n                    {text: 'Голубой', id: 3},\n                    {text: 'Рыжий', id: 4},\n                ]\n            },\n            {\n                question: 'Девиз Тимона и Пумбы?',\n                rightAnswerId: 1,\n                id: 3,\n                answers: [\n                    {text: 'Акуна Матата', id: 1},\n                    {text: 'Сакура Имата', id: 2},\n                    {text: 'Ханука Матана', id: 3},\n                    {text: 'Ха ха ха', id: 4},\n                ]\n            },\n            {\n                question: 'Чип и Дейл?',\n                rightAnswerId: 4,\n                id: 4,\n                answers: [\n                    {text: 'Честь и величие', id: 1},\n                    {text: 'Храбрость и безумие', id: 2},\n                    {text: 'Страх и отчаяние', id: 3},\n                    {text: 'Слабоумие и отвага', id: 4},\n                ]\n            }\n        ]\n    }\n//Функция проверки правильного ответа по клику\n    onAnswerClickHandler = (answerId) => {\n\n        if (this.state.answerState) {\n            //По [0] элементу потому что мы знаем что у нас присвается только один ключ к правильнмоу ответу\n            //И если это присвоенное значение равно проверке, останавливаем функцию return\n            //Избавит от бага двойного клика на вопрос\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'succes') {\n                return\n            }\n\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n        if (question.rightAnswerId === answerId) {\n            //Обращаемся в question.id что является id текущего вопроса\n            //И в него записываем значение success или error\n            if(!results[question.id]){\n                //Если в объекте ничего нет то мы не отвечали и можем записать\n            results[question.id] = 'succes'\n            }\n            this.setState({\n                answerState: {[answerId]: 'succes'},\n                results: results\n            });\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    });\n                } else {\n                    //По клику меняеем стейт активного вопроса и используем его номер\n                    //При обращении к массиву в компоненте ActiveQuiz\n                    //Если меняется ActivQuestion меняется и индекс, и перерисовывается страница\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    });\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: {[answerId]: 'error'},\n                results: results\n            });\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        const timeout = window.setTimeout(() => {\n            this.setState({\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            });\n            window.clearTimeout(timeout)\n        }, 1000)\n\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы:</h1>\n                    {this.state.isFinished\n                        ? <FinishedQuiz\n                            results={this.state.results}\n                            quiz={this.state.quiz }\n                            onRetry={this.retryHandler}\n                        /> : <ActiveQuiz\n                            // Передаем ссылку на элемент массива как параметр\n                            //  Который используется в компоненте ActiveQuiz\n                            answers={this.state.quiz[this.state.activeQuestion].answers}\n                            question={this.state.quiz[this.state.activeQuestion].question}\n                            onAnswerClick={this.onAnswerClickHandler}\n                            quizLength={this.state.quiz.length}\n                            answerNumber={this.state.activeQuestion + 1}\n                            state={this.state.answerState}\n                        />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React, {Component} from 'react'\nimport classes from './Auth.css'\n\nexport default class  Auth extends Component {\n    render () {\n        return (\n            <div className={classes.Auth}>\n                <h1>Авторизация</h1>\n                <p style={{color: 'red'}}><strong>В процессе разработки...</strong></p>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport classes from './QuizCreator.css'\nexport default class QuizCreator extends Component {\n    render () {\n        return (\n            <div className={classes.QuizCreator}>\n                <h1>Создать тест</h1>\n                <p  style={{color: 'red'}}><strong>В процессе разработки...</strong></p>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport classes from './QuizList.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nexport default class QuizList extends Component {\n\n    renderQuizes() {\n        return [1, 2, 3].map((quiz, index) => {\n            return (\n                <li\n                key={index}\n                >\n                   <NavLink\n                   to={'/quiz/' + quiz}\n                   >\n                    Тест № {quiz}\n                   </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов:</h1>\n\n                    <ul>\n                        {this.renderQuizes()}\n                    </ul>\n\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Switch, Route} from 'react-router-dom'\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n    return (\n    <Layout>\n        <Switch>\n            <Route path='/auth' component={Auth}/>\n            <Route path='/quiz-creator' component={QuizCreator}/>\n            <Route path='/quiz/:id' component={Quiz}/> {/*Динамичский ID*/}\n            <Route path='/' component={QuizList}/>\n        </Switch>\n\n    </Layout>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>\n)\n\nReactDOM.render(app\n    ,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}