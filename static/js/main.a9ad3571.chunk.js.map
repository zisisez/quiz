{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","containers/Auth/Auth.css","components/UI/Input/Input.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","components/UI/Loader/Loader.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","style","textAlign","padding","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","whiteSpace","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","rightAnswerId","retryHandler","get","match","params","response","data","console","log","QuizWrapper","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","onSubmit","AuthForm","renderInputs","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","a","post","changeHandler","selectChangeHandler","select","renderControls","QuizList","quizes","renderQuizes","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9ad3571.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--1vtC6\",\"close\":\"Drawer__close--1DPHJ\",\"active\":\"Drawer__active--3Ewwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--2trbj\",\"open\":\"MenuToggle__open--UVJ1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--guFF3\",\"QuizWrapper\":\"Quiz__QuizWrapper--3Hy2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--lxUZJ\",\"Question\":\"ActiveQuiz__Question--Flw_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--3SNQ0\",\"succes\":\"AnswerItem__succes--bjj8q\",\"error\":\"AnswerItem__error--1EAN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2wZlN\",\"succes\":\"FinishedQuiz__succes--MQa8P\",\"error\":\"FinishedQuiz__error--3yLIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--3bi60\",\"error\":\"Button__error--1gfMk\",\"succes\":\"Button__succes--2MrVv\",\"primary\":\"Button__primary--3iRH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2N4mh\",\"AuthForm\":\"Auth__AuthForm--w8QpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--2JD9x\",\"invalid\":\"Input__invalid--2PJ1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2wiTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--1m7c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1RCrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--7CH6c\",\"lds-ring\":\"Loader__lds-ring--1-9-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--2r9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--2TzCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--kvD_d\"};","import React from 'react'\nimport classes from './MenuToggle.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n    if(props.isOpen){\n        cls.push('fa-times')\n        cls.push(classes.open)\n    }else {\n        cls.push('fa-bars')\n    }\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.css'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, {Component} from 'react'\nimport classes from './Drawer.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from \"react-router-dom\";\n\nconst links = [\n    {to: '/', label: 'Список тестов', exact: true},\n    {to: '/auth', label: 'Авторизация', exact: true},\n    {to: '/quiz-creator', label: 'Создать тест', exact: true}\n]\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    }\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n    render() {\n        const cls = [classes.Drawer]\n        if(!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n        return (\n            <React.Fragment>\n            <nav className={cls.join(' ')}>\n                <ul>\n                    {this.renderLinks()}\n                </ul>\n            </nav>\n                {this.props.isOpen ? <Backdrop\n                onClick={this.props.onClose}/> : null}\n            </React.Fragment>\n        )\n    }\n}\nexport default Drawer\n","import React, { Component } from \"react\";\nimport classes from \"./Layout.css\";\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  }\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    });\n  }\n\n  menuCloseHandler = () => {\n      this.setState({\n          menu: false\n      });\n  }\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n            isOpen={this.state.menu}\n            onClose={this.menuCloseHandler}\n        />\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n        <main>{this.props.children}</main>\n          <div style={{textAlign: 'center', padding: '15px 0'}}>Created by Eugene Zolotarev</div>\n      </div>\n    );\n  }\n}\nexport default Layout;\n","import React from 'react'\nimport classes from './AnswerItem.css'\n\nconst AnswerItem = props => {\nconst cls = [classes.AnswerItem]\n    if(props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li className={cls.join(' ')}\n            //По клику вызываем функцию которая вызываевает переданную по иерархии\n            // функцию проверки на правильность клика в которая принимает id конкретного элемента массива\n        onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n            {/*Отображаем ответ answer который берется из итерируемого массива\n            в компоненте AnswerList*/}\n            {props.answer.text}\n        </li>\n    )\n}\n\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                //Задаем props для Item который вкладывает в себя в файле\n                //AnswerItem как содержимое выводимое в html\n                //Где answer итерируемый элемент массива и необходимый для React key по индексу элемента массива\n                <AnswerItem\n                answer={answer}\n                key={index}\n                onAnswerClick={props.onAnswerClick}\n                state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })}\n    </ul>\n)\n\nexport default AnswersList","import React from 'react';\nimport classes from './ActiveQuiz.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n     <span>\n         <strong>{props.answerNumber}.\n         &nbsp;{props.question}\n         </strong>\n     </span>\n\n            <small style={{whiteSpace: 'nowrap'}}>{props.answerNumber} из {props.quizLength}</small>\n        </p>\n       <AnswersList\n       // Забираем параметр из вызова компонента в файле Quiz\n       // в котором как параметр задается ссылка на массив ответов\n       answers={props.answers}\n       onAnswerClick={props.onAnswerClick}\n       state={props.state}\n       />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\nimport classes from './Button.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n    return (\n        <button\n            className={cls.join(' ')}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.css'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'succes') {\n            total++\n        }\n        return total\n    }, 0)\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Повторить</Button>\n                <Link to={'/'}><Button type='succes'>К списку тестов</Button></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://quiz-7b9fa-default-rtdb.europe-west1.firebasedatabase.app/'\n})","import React from 'react'\nimport classes from './Loader.css'\n\nconst Loader = props => (\n    <div style={{textAlign: 'center'}}>\n    <div className={classes.Loader}>\n        <div/>\n        <div/>\n        <div/>\n        <div/>\n    </div>\n    </div>\n)\n\n\nexport default Loader","import React, {Component} from 'react'\nimport classes from './Quiz.css'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from \"../../axios/axios-quiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nclass Quiz extends Component {\n    state = {\n        results: {}, // {[id]: success error\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null, // {[id]: success error\n        loading: true,\n        quiz: []\n\n    }\n//Функция проверки правильного ответа по клику\n    onAnswerClickHandler = (answerId) => {\n\n        const timeout = () => {\n            window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    });\n                } else {\n                    //По клику меняеем стейт активного вопроса и используем его номер\n                    //При обращении к массиву в компоненте ActiveQuiz\n                    //Если меняется ActivQuestion меняется и индекс, и перерисовывается страница\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    });\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n        }\n\n        if (this.state.answerState) {\n            //По [0] элементу потому что мы знаем что у нас присвается только один ключ к правильнмоу ответу\n            //И если это присвоенное значение равно проверке, останавливаем функцию return\n            //Избавит от бага двойного клика на вопрос\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'succes') {\n                return\n            }\n\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n        if (question.rightAnswerId === answerId) {\n            //Обращаемся в question.id что является id текущего вопроса\n            //И в него записываем значение success или error\n            if (!results[question.id]) {\n                //Если в объекте ничего нет то мы не отвечали и можем записать\n                results[question.id] = 'succes'\n            }\n            this.setState({\n                answerState: {[answerId]: 'succes'},\n                results: results\n            });\n            timeout()\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: {[answerId]: 'error'},\n                results: results\n            });\n            timeout()\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        const timeout = window.setTimeout(() => {\n            this.setState({\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            });\n            window.clearTimeout(timeout)\n        }, 1000)\n\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n            const quiz = response.data\n\n            this.setState({\n                quiz,\n                loading: false\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы:</h1>\n\n                    {/*{this.state.loading ? console.log(this.state.quiz[this.state.activeQuestion].answers) : null}*/}\n                    {\n                        this.state.loading\n                            ? <Loader />\n                            :\n                                this.state.isFinished\n                                ? <FinishedQuiz\n                                    results={this.state.results}\n                                    quiz={this.state.quiz}\n                                    onRetry={this.retryHandler}\n                                />\n                                : <ActiveQuiz\n                                    answers={this.state.quiz[this.state.activeQuestion].answers}\n                                    question={this.state.quiz[this.state.activeQuestion].question}\n                                    onAnswerClick={this.onAnswerClickHandler}\n                                    quizLength={this.state.quiz.length}\n                                    answerNumber={this.state.activeQuestion + 1}\n                                    state={this.state.answerState}\n                                />\n\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz","import React from 'react'\nimport classes from './Input.css'\n//Проверяем валидность !деструктуризация props!\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text'\n    const cls = [classes.Input]\n    //Уникальный id для связки лейбл и инпута\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {//Если не валидно выводим сообщение\n                isInvalid(props)\n                    ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n                    : null\n            }\n        </div>\n    )\n}\n\nexport default Input","import React, {Component} from 'react'\nimport classes from './Auth.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js'\n\nexport default class Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите корректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите корректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n\n        }\n    }\n\n    loginHandler = () => {\n\n    }\n\n    registerHandler = () => {\n\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n    }\n\n//value получаем из нажатия клавиш control.value & валидация из копии стейта\n    validateControl(value, validation) {\n        //Если валидация не присутствуем значит валидно\n        if (!validation) {\n            return true\n        }\n//Изначально валидно\n        let isValid = true\n//Если есть свойство required и не является пустой строкой и до этого валидация была true\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n//Если email проходит проверку с помощью библиотеки is.js\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n//Если имеется поле проверки на длинну и больше значения и до этого isValid была true(все проверки пройдены)\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n// Возврашаем пройдена валидация или нет в итоге\n        return isValid\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = {...this.state.formControls} //Создаем копию стейта\n        const control = {...formControls[controlName]}//Забираем каждое значение из массива\n\n        control.value = event.target.value //Записываем в копию нажатие клавиш\n        control.touched = true //Меняем значение так как начали что то вводить\n        // Проверяем на валидность введенных данных\n        control.valid = this.validateControl(control.value, control.validation)\n//Перезаписываем копию массива по верхним изменениям\n        formControls[controlName] = control\n        //Изначально форма валидна\n        let isFormValid = true\n        // Забираем ключи копии массива и перебираем если ключ имеет valid и он true\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        })\n//Перезаписываем стейт из обработанной копии\n        this.setState({\n            formControls, isFormValid\n        });\n    }\n\n//Рендерим инпут со всеми значениями из стейта и в итоге при изменении запускаем onChangeHandler функцию которая меняет стейт\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={(event) => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n                    {/*Отменяем стандартное поведение формы*/}\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n                        {/*Рендерим инпуты которые получаем через Object.key из formControls по ключам*/}\n                        {this.renderInputs()}\n                        {/*Рендерим кнопки и проверяем на валидность */}\n                        <Button\n                            type='succes'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","export function createControl (config, validation ) {\n    return {\n        ...config,\n        validation,\n        //Если мы передаем набор валидации то изначально valid: false до проверок\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate (value, validation = null) {\n    if(!validation) {\n        return true\n    }\n    let isValid = true\n\n    if(validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if(formControls.hasOwnProperty(control)) {\n           isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n    return isFormValid\n}","import React from 'react'\nimport classes from './Select.css'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>\n                {props.label}\n            </label>\n            <select\n                value={props.value}\n                onChange={props.onChange}\n                id={htmlFor}\n            >\n                { props.options.map((option, index) => {\n                    return (\n                        <option\n                        value={option.value}\n                        key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                    \n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","const Auxiliary = props => props.children\n\nexport default Auxiliary","import React, {Component} from 'react'\nimport classes from './QuizCreator.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport {createControl, validate, validateForm} from \"../../form/formFramework\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport axios from \"../../axios/axios-quiz\";\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ответа № ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {\n        required: true\n    })\n}\n\n//Когда нужно добавить новый вопрос нужно обнулить state, поэтому создаем отдельную функцию для этого\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос:',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {\n            required: true\n        }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n        //Создаем копию state\n        const quiz = this.state.quiz.concat()\n        //Получаем index\n        const index = quiz.length + 1\n        //Используем деструктуризацию из formControls\n        const {question, option1, option2, option3, option4} = this.state.formControls\n        //Создаем объек который будет отвечать за каждый вопрос и ответы в тесте\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        }\n        quiz.push(questionItem)\n        this.setState({\n            quiz,\n            isFormValid: false,\n            rightAnswerId: 1,\n            //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = async event => {\n        event.preventDefault()\n        try {\n            await axios.post('/quizes.json', this.state.quiz)\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n                formControls: createFormControls()\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    changeHandler = (value, controlName) => {\n        //Создаем ссылки\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n        //Записываем значения\n        control.touched = true\n        control.value = value\n        //Проверяем валидны ли введенные данные из функции validate из formFramework\n        control.valid = validate(control.value, control.validation)\n        //Записываем новые значения в кождый элемент\n        formControls[controlName] = control\n        //Меняем state проверяя функцией из formFramework\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        });\n    }\n\n    renderControls() {\n        //Получаем массив ключей (option 1-4)\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            //В переменную попадает либо question либо option 1-4\n            const control = this.state.formControls[controlName]\n            //Кофигурируем инпут\n            return (\n                //Обертка, корневой элемент для jsx инпута\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        //Параметры берем из ссылки на state.formControls по каждому элементу итерации\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        //Приводим к булевому значению !!\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        //При изменении запускаем функцию которая меняет state\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n\n    }\n\n    //При выборе правильного ответа меняем велью и записываем в rightAnswerId\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        });\n    }\n\n    render() {\n        //Записываем в переменную и конфигурируем select\n        const select = <Select\n            label='Выберите номер правильного ответа'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 'Ответ № 1', value: 1},\n                {text: 'Ответ № 2', value: 2},\n                {text: 'Ответ № 3', value: 3},\n                {text: 'Ответ № 4', value: 4}\n            ]}\n        />\n        return (\n            <div className={classes.QuizCreator}>\n                <div><h1>Создание теста</h1>\n                    {/*С помощью функции делаем preventDefault*/}\n                    <form onSubmit={this.submitHandler}>\n                        {/*Рендерим инпуты вопроса/ответов*/}\n                        {this.renderControls()}\n                        {/*Рендер select*/}\n                        {select}\n                        {/*Если кнопка не прошла валидацию то выключена*/}\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n                        {/*Если ни один вопрос не добавлен в массив Quiz то нельзя создать тест*/}\n                        <Button\n                            type='succes'\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'\nimport classes from './QuizList.css'\nimport {NavLink} from \"react-router-dom\";\nimport axios from \"../../axios/axios-quiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nexport default class QuizList extends Component {\n\n    state = {\n        quizes: [],\n        loading: true\n    }\n\n    renderQuizes() {\n        return this.state.quizes.map((quiz) => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink\n                        to={'/quiz/' + quiz.id}\n                    >\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    //Для обращения к backend в 99 случаев используем componentDidMount\n    //Ибо чтобы изменить state должно быть готово DOM дерево\n    async componentDidMount() {\n        try {\n            const response = await axios.get('/quizes.json')\n            const quizes = []\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест № ${index + 1}`\n                })\n            })\n            this.setState({\n                quizes, loading: false\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов:</h1>\n                    {this.state.loading\n                        ? <Loader />\n                        : <ul>\n                            {this.renderQuizes()}\n                        </ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Switch, Route} from 'react-router-dom'\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n    return (\n    <Layout>\n        <Switch>\n            <Route path='/auth' component={Auth}/>\n            <Route path='/quiz-creator' component={QuizCreator}/>\n            <Route path='/quiz/:id' component={Quiz}/> {/*Динамичский ID*/}\n            <Route path='/' component={QuizList}/>\n        </Switch>\n\n    </Layout>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n)\n\nReactDOM.render(app\n    ,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}