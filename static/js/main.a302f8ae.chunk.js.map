{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","containers/Auth/Auth.css","components/UI/Input/Input.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","components/UI/Loader/Loader.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","style","textAlign","padding","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","whiteSpace","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Loader","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","timeout","window","setTimeout","questionNumber","activeQuestion","isQuizFinished","clearTimeout","rightAnswerId","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","QuizList","fetchQuizes","renderQuizes","Logout","App","autoLogin","routes","path","component","withRouter","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a302f8ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--1vtC6\",\"close\":\"Drawer__close--1DPHJ\",\"active\":\"Drawer__active--3Ewwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--2trbj\",\"open\":\"MenuToggle__open--UVJ1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--guFF3\",\"QuizWrapper\":\"Quiz__QuizWrapper--3Hy2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--lxUZJ\",\"Question\":\"ActiveQuiz__Question--Flw_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--3SNQ0\",\"succes\":\"AnswerItem__succes--bjj8q\",\"error\":\"AnswerItem__error--1EAN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2wZlN\",\"succes\":\"FinishedQuiz__succes--MQa8P\",\"error\":\"FinishedQuiz__error--3yLIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--3bi60\",\"error\":\"Button__error--1gfMk\",\"succes\":\"Button__succes--2MrVv\",\"primary\":\"Button__primary--3iRH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2N4mh\",\"AuthForm\":\"Auth__AuthForm--w8QpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--2JD9x\",\"invalid\":\"Input__invalid--2PJ1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2wiTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--1m7c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1RCrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--7CH6c\",\"lds-ring\":\"Loader__lds-ring--1-9-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--2r9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--2TzCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--kvD_d\"};","import React from 'react'\nimport classes from './MenuToggle.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n    if(props.isOpen){\n        cls.push('fa-times')\n        cls.push(classes.open)\n    }else {\n        cls.push('fa-bars')\n    }\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.css'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, {Component} from 'react'\nimport classes from './Drawer.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport {NavLink} from \"react-router-dom\";\n\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    }\n\n    renderLinks(links) {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n    render() {\n        const cls = [classes.Drawer]\n        if(!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n        const links = [\n            {to: '/', label: 'Список тестов', exact: true}\n        ]\n\n        if(this.props.isAuthenticated) {\n            links.push( {to: '/quiz-creator', label: 'Создать тест', exact: false})\n            links.push( {to: '/logout', label: 'Выйти', exact: false})\n        } else {\n            links.push(  {to: '/auth', label: 'Авторизация', exact: false})\n        }\n\n        return (\n            <React.Fragment>\n            <nav className={cls.join(' ')}>\n                <ul>\n                    {this.renderLinks(links)}\n                </ul>\n            </nav>\n                {this.props.isOpen ? <Backdrop\n                onClick={this.props.onClose}/> : null}\n            </React.Fragment>\n        )\n    }\n}\nexport default Drawer\n","import React, { Component } from \"react\";\nimport classes from \"./Layout.css\";\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\nimport {connect} from \"react-redux\";\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  }\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    });\n  }\n\n  menuCloseHandler = () => {\n      this.setState({\n          menu: false\n      });\n  }\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n            isOpen={this.state.menu}\n            onClose={this.menuCloseHandler}\n            isAuthenticated={this.props.isAuthenticated}\n        />\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n        <main>{this.props.children}</main>\n          <div style={{textAlign: 'center', padding: '15px 0'}}>Created by Eugene Zolotarev</div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react'\nimport classes from './AnswerItem.css'\n\nconst AnswerItem = props => {\nconst cls = [classes.AnswerItem]\n    if(props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li className={cls.join(' ')}\n            //По клику вызываем функцию которая вызываевает переданную по иерархии\n            // функцию проверки на правильность клика в которая принимает id конкретного элемента массива\n        onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n            {/*Отображаем ответ answer который берется из итерируемого массива\n            в компоненте AnswerList*/}\n            {props.answer.text}\n        </li>\n    )\n}\n\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                //Задаем props для Item который вкладывает в себя в файле\n                //AnswerItem как содержимое выводимое в html\n                //Где answer итерируемый элемент массива и необходимый для React key по индексу элемента массива\n                <AnswerItem\n                answer={answer}\n                key={index}\n                onAnswerClick={props.onAnswerClick}\n                state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })}\n    </ul>\n)\n\nexport default AnswersList","import React from 'react';\nimport classes from './ActiveQuiz.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n     <span>\n         <strong>{props.answerNumber}.\n         &nbsp;{props.question}\n         </strong>\n     </span>\n\n            <small style={{whiteSpace: 'nowrap'}}>{props.answerNumber} из {props.quizLength}</small>\n        </p>\n       <AnswersList\n       // Забираем параметр из вызова компонента в файле Quiz\n       // в котором как параметр задается ссылка на массив ответов\n       answers={props.answers}\n       onAnswerClick={props.onAnswerClick}\n       state={props.state}\n       />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\nimport classes from './Button.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n    return (\n        <button\n            className={cls.join(' ')}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.css'\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'succes') {\n            total++\n        }\n        return total\n    }, 0)\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n                    return (\n                        <li\n                            key={index}\n                        >\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')}/>\n                        </li>\n                    )\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary'>Повторить</Button>\n                <Link to={'/'}><Button type='succes'>К списку тестов</Button></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import React from 'react'\nimport classes from './Loader.css'\n\nconst Loader = props => (\n    <div style={{textAlign: 'center'}}>\n    <div className={classes.Loader}>\n        <div/>\n        <div/>\n        <div/>\n        <div/>\n    </div>\n    </div>\n)\n\n\nexport default Loader","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://quiz-7b9fa-default-rtdb.europe-west1.firebasedatabase.app/'\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import axios from \"../../axios/axios-quiz\";\nimport {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"./actionTypes\";\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n        try {\n            const response = await axios.get('/quizes.json')\n            const quizes = []\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест № ${index + 1}`\n                })\n            })\n            dispatch(fetchQuizesSuccess(quizes))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n\n        try {\n            const response = await axios.get(`/quizes/${quizId}.json`)\n            const quiz = response.data\n            dispatch(fetchQuizSuccess(quiz))\n        } catch (e) {\n            fetchQuizesError(e)\n        }\n    }\n}\n\nexport function fetchQuizSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCESS,\n        quiz\n    }\n\n}\n\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START\n    }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCESS,\n        quizes: quizes\n    }\n}\n\nexport function fetchQuizesError(e) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error: e\n    }\n}\n\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}\n\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState, results\n    }\n}\n\nexport function finishQuiz() {\n    return {\n        type: FINISH_QUIZ\n    }\n}\n\nexport function quizNextQuestion(questionNumber) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        questionNumber\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    //Функция проверки правильного ответа по клику\n    return (dispatch, getState) => {\n        const state = getState().quiz\n        const timeout = () => {\n            window.setTimeout(() => {\n                if (isQuizFinished(state)) {\n                    dispatch(finishQuiz())\n                } else {\n                    //По клику меняеем стейт активного вопроса и используем его номер\n                    //При обращении к массиву в компоненте ActiveQuiz\n                    //Если меняется ActivQuestion меняется и индекс, и перерисовывается страница\n                    // this.setState({\n                    //     activeQuestion: this.state.activeQuestion + 1,\n                    //     answerState: null\n                    // });\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n        }\n\n        if (state.answerState) {\n            //По [0] элементу потому что мы знаем что у нас присвается только один ключ к правильнмоу ответу\n            //И если это присвоенное значение равно проверке, останавливаем функцию return\n            //Избавит от бага двойного клика на вопрос\n            const key = Object.keys(state.answerState)[0]\n            if (state.answerState[key] === 'succes') {\n                return\n            }\n\n        }\n\n        const question = state.quiz[state.activeQuestion]\n        const results = state.results\n        if (question.rightAnswerId === answerId) {\n            //Обращаемся в question.id что является id текущего вопроса\n            //И в него записываем значение success или error\n            if (!results[question.id]) {\n                //Если в объекте ничего нет то мы не отвечали и можем записать\n                results[question.id] = 'succes'\n            }\n            dispatch(quizSetState({[answerId]: 'succes'}, results))\n            timeout()\n        } else {\n            results[question.id] = 'error'\n            dispatch(quizSetState({[answerId]: 'error'}, results))\n            timeout()\n        }\n    }\n}\n\nfunction isQuizFinished(state) {\n    return state.activeQuestion + 1 === state.quiz.length\n}","import React, {Component} from 'react'\nimport classes from './Quiz.css'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\nimport {connect} from \"react-redux\";\n\nclass Quiz extends Component {\n\n    componentDidMount() {\n        this.props.fetchQuizById(this.props.match.params.id)\n    }\n\n    componentWillUnmount() {\n        this.props.retryQuiz()\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы:</h1>\n\n                    {/*{this.state.loading ? console.log(this.state.quiz[this.state.activeQuestion].answers) : null}*/}\n                    {\n                        this.props.loading || !this.props.quiz\n                             ? <Loader/>\n                            :\n                            this.props.isFinished\n                                ? <FinishedQuiz\n                                    results={this.props.results}\n                                    quiz={this.props.quiz}\n                                    onRetry={this.props.retryQuiz}\n                                />\n                                : <ActiveQuiz\n                                    answers={this.props.quiz[this.props.activeQuestion].answers}\n                                    question={this.props.quiz[this.props.activeQuestion].question}\n                                    onAnswerClick={this.props.quizAnswerClick}\n                                    quizLength={this.props.quiz.length}\n                                    answerNumber={this.props.activeQuestion + 1}\n                                    state={this.props.answerState}\n                                />\n\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch (retryQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React from 'react'\nimport classes from './Input.css'\n//Проверяем валидность !деструктуризация props!\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text'\n    const cls = [classes.Input]\n    //Уникальный id для связки лейбл и инпута\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n            {//Если не валидно выводим сообщение\n                isInvalid(props)\n                    ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n                    : null\n            }\n        </div>\n    )\n}\n\nexport default Input","import axios from \"axios\";\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\n\nexport function auth(email, password, isLogin) {\n    return async dispatch => {\n\n        const authData = {\n            email, password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCxjF2Z5kUF_jOJ5Z-hn9I0e-YM9qFStIE'\n        if (isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCxjF2Z5kUF_jOJ5Z-hn9I0e-YM9qFStIE'\n        }\n        const response = await axios.post(url, authData)\n        const data = response.data\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n        localStorage.setItem('token', data.idToken)\n        localStorage.setItem('userId', data.localId)\n        localStorage.setItem('expirationDate', expirationDate)\n\n        dispatch(authSuccess(data.idToken))\n        dispatch(autoLogout(data.expiresIn))\n    }\n}\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1000)\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userId')\n    localStorage.removeItem('expirationDate')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\n\nexport function autoLogin() {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate <= new Date()) {\n                dispatch(logout())\n            }else {\n                dispatch(authSuccess(token))\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n\n\nexport function authSuccess(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token\n    }\n}","import React, {Component} from 'react'\nimport classes from './Auth.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport is from 'is_js'\nimport {connect} from \"react-redux\";\nimport {auth} from \"../../store/actions/auth\";\n\nclass Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите корректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите корректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n\n        }\n    }\n\n    loginHandler = () => {\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true )\n\n    }\n\n    registerHandler = () => {\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false )\n\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n    }\n\n//value получаем из нажатия клавиш control.value & валидация из копии стейта\n    validateControl(value, validation) {\n        //Если валидация не присутствуем значит валидно\n        if (!validation) {\n            return true\n        }\n//Изначально валидно\n        let isValid = true\n//Если есть свойство required и не является пустой строкой и до этого валидация была true\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n//Если email проходит проверку с помощью библиотеки is.js\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n//Если имеется поле проверки на длинну и больше значения и до этого isValid была true(все проверки пройдены)\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n// Возврашаем пройдена валидация или нет в итоге\n        return isValid\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = {...this.state.formControls} //Создаем копию стейта\n        const control = {...formControls[controlName]}//Забираем каждое значение из массива\n\n        control.value = event.target.value //Записываем в копию нажатие клавиш\n        control.touched = true //Меняем значение так как начали что то вводить\n        // Проверяем на валидность введенных данных\n        control.valid = this.validateControl(control.value, control.validation)\n        //Перезаписываем копию массива по верхним изменениям\n        formControls[controlName] = control\n        //Изначально форма валидна\n        let isFormValid = true\n        // Забираем ключи копии массива и перебираем если ключ имеет valid и он true\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        })\n        //Перезаписываем стейт из обработанной копии\n        this.setState({\n            formControls, isFormValid\n        });\n    }\n\n    //Рендерим инпут со всеми значениями из стейта и в итоге при изменении запускаем onChangeHandler функцию которая меняет стейт\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={(event) => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n                    {/*Отменяем стандартное поведение формы*/}\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n                        {/*Рендерим инпуты которые получаем через Object.key из formControls по ключам*/}\n                        {this.renderInputs()}\n                        {/*Рендерим кнопки и проверяем на валидность */}\n                        <Button\n                            type='succes'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)","export function createControl (config, validation ) {\n    return {\n        ...config,\n        validation,\n        //Если мы передаем набор валидации то изначально valid: false до проверок\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate (value, validation = null) {\n    if(!validation) {\n        return true\n    }\n    let isValid = true\n\n    if(validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if(formControls.hasOwnProperty(control)) {\n           isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n    return isFormValid\n}","import React from 'react'\nimport classes from './Select.css'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>\n                {props.label}\n            </label>\n            <select\n                value={props.value}\n                onChange={props.onChange}\n                id={htmlFor}\n            >\n                { props.options.map((option, index) => {\n                    return (\n                        <option\n                        value={option.value}\n                        key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                    \n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","const Auxiliary = props => props.children\n\nexport default Auxiliary","import React, {Component} from 'react'\nimport classes from './QuizCreator.css'\nimport Button from \"../../components/UI/Button/Button\";\nimport {createControl, validate, validateForm} from \"../../form/formFramework\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\nimport {connect} from \"react-redux\";\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ответа № ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {\n        required: true\n    })\n}\n\n//Когда нужно добавить новый вопрос нужно обнулить state, поэтому создаем отдельную функцию для этого\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос:',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {\n            required: true\n        }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nclass QuizCreator extends Component {\n\n    state = {\n        isFormValid: false,\n        rightAnswerId: 1,\n        //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n        // //Создаем копию state\n        // const quiz = this.props.quiz.concat()\n        // //Получаем index\n        // const index = quiz.length + 1\n        //Используем деструктуризацию из formControls\n        const {question, option1, option2, option3, option4} = this.state.formControls\n        //Создаем объек который будет отвечать за каждый вопрос и ответы в тесте\n        const questionItem = {\n            question: question.value,\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        }\n        this.props.createQuizQuestion(questionItem)\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n            formControls: createFormControls(),\n        })\n    }\n\n    createQuizHandler =  event => {\n        event.preventDefault()\n\n            this.setState({\n                isFormValid: false,\n                rightAnswerId: 1,\n                //Получаем набор опций стейта из функции при добавлении нового вопроса стейт будет изначальным\n                formControls: createFormControls(),\n            });\n            this.props.finishCreateQuiz()\n\n    }\n\n    changeHandler = (value, controlName) => {\n        //Создаем ссылки\n        const formControls = {...this.state.formControls}\n        const control = {...formControls[controlName]}\n        //Записываем значения\n        control.touched = true\n        control.value = value\n        //Проверяем валидны ли введенные данные из функции validate из formFramework\n        control.valid = validate(control.value, control.validation)\n        //Записываем новые значения в кождый элемент\n        formControls[controlName] = control\n        //Меняем state проверяя функцией из formFramework\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        });\n    }\n\n    renderControls() {\n        //Получаем массив ключей (option 1-4)\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            //В переменную попадает либо question либо option 1-4\n            const control = this.state.formControls[controlName]\n            //Кофигурируем инпут\n            return (\n                //Обертка, корневой элемент для jsx инпута\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        //Параметры берем из ссылки на state.formControls по каждому элементу итерации\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        //Приводим к булевому значению !!\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        //При изменении запускаем функцию которая меняет state\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n\n    }\n    //При выборе правильного ответа меняем велью и записываем в rightAnswerId\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        });\n    }\n\n    render() {\n        //Записываем в переменную и конфигурируем select\n        const select = <Select\n            label='Выберите номер правильного ответа'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 'Ответ № 1', value: 1},\n                {text: 'Ответ № 2', value: 2},\n                {text: 'Ответ № 3', value: 3},\n                {text: 'Ответ № 4', value: 4}\n            ]}\n        />\n        return (\n            <div className={classes.QuizCreator}>\n                <div><h1>Создание теста</h1>\n                    {/*С помощью функции делаем preventDefault*/}\n                    <form onSubmit={this.submitHandler}>\n                        {/*Рендерим инпуты вопроса/ответов*/}\n                        {this.renderControls()}\n                        {/*Рендер select*/}\n                        {select}\n                        {/*Если кнопка не прошла валидацию то выключена*/}\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n                        {/*Если ни один вопрос не добавлен в массив Quiz то нельзя создать тест*/}\n                        <Button\n                            type='succes'\n                            onClick={this.createQuizHandler}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\nimport axios from \"../../axios/axios-quiz\";\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport\n\nfunction finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizes.json', getState().create.quiz)\n        dispatch(resetQuizCreation())\n    }\n}","import React, {Component} from 'react'\nimport classes from './QuizList.css'\nimport {NavLink} from \"react-router-dom\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport {connect} from \"react-redux\";\nimport {fetchQuizes} from \"../../store/actions/quiz\";\n\nclass QuizList extends Component {\n\n    renderQuizes() {\n        return this.props.quizes.map((quiz) => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink\n                        to={'/quiz/' + quiz.id}\n                    >\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    //Для обращения к backend в 99 случаев используем componentDidMount\n    //Ибо чтобы изменить state должно быть готово DOM дерево\n     componentDidMount() {\n        this.props.fetchQuizes()\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов:</h1>\n                    {this.props.loading && this.props.quizes.length !== 0\n                        ? <Loader/>\n                        : <ul>\n                            {this.renderQuizes()}\n                        </ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../store/actions/auth\";\nimport {Redirect} from 'react-router-dom'\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.logout()\n    }\n    render() {\n        return <Redirect to={'/'} />\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path='/auth' component={Auth}/>\n                <Route path='/quiz/:id' component={Quiz}/> {/*Динамичский ID*/}\n                <Route path='/' exact component={QuizList}/>\n                <Redirect to='/'/>\n            </Switch>\n        )\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path='/quiz-creator' component={QuizCreator}/>\n                    <Route path='/quiz/:id' component={Quiz}/> {/*Динамичский ID*/}\n                    <Route path='/logout' component={Logout} />\n                    <Route path='/' exact component={QuizList}/>\n                    <Redirect to='/'/>\n                </Switch>\n            )\n        }\n        return (\n            <Layout>\n                {routes}\n            </Layout>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quizes: [],\n    loading: false,\n    error: null,\n    results: {}, // {[id]: success error\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // {[id]: success error\n    quiz: null\n}\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return  {\n                ...state, loading: true\n            }\n        case FETCH_QUIZES_SUCCESS:\n            return  {\n                ...state, loading: false, quizes: action.quizes\n            }\n        case FETCH_QUIZES_ERROR:\n            return  {\n                ...state, loading: false, error: action.error\n            }\n        case FETCH_QUIZ_SUCCESS:\n            return  {\n                ...state, loading: false, quiz: action.quiz\n            }\n        case QUIZ_SET_STATE:\n            return {\n                ...state, answerState: action.answerState, results: action.results\n            }\n        case FINISH_QUIZ:\n            return {\n                ...state, isFinished: true\n            }\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state, answerState: null, activeQuestion: action.questionNumber\n            }\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            }\n        default:\n            return state\n    }\n}\n\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: []\n}\n\nexport default function createReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item]\n            }\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state, quiz: []\n            }\n        default:\n            return state\n    }\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    token: null\n}\n\nexport default function authReducer(state=initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state, token: action.token\n            }\n        case AUTH_LOGOUT: {\n            return {\n               ...state, token: null\n            }\n        }\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport quizReducer from \"./quiz\";\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\n\nexport default combineReducers({\n    quiz: quizReducer,\n    create: createReducer,\n    auth: authReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app\n    ,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}